
{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Seans-TypeScript-NodeJS-CRUD-REST-API-Boilerplate",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev, or from Heroku"
        },
        {
            "url": "/api/",
            "description": "With docker-compose and nginx proxy"
        }
    ],
    "tags": [
        {
            "name": "Gateway",
            "description": "API for the gateway in the App"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/mypokemons/{token}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "path",
                    "required": true,
                    "description": "token of the user",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Pokemons"
                ],
                "summary": "Get all pokemons the user owns",
                "parameters": [
                    {
                    "in": "path",
                    "name": "token",
                    "required": true,
                    "description": "token of the user",
                    "schema": {
                        "$ref": "#/definitions/id"
                    }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pokemons"
                        }
                    }
                }
            }
        },
        "/buypokemon/{token}":{
            "parameters":[
                {
                    "in": "path",
                    "name": "token",
                    "required": true,
                    "description": "token of the user",
                    "type": "string"
                },
                {
                    "in": "query",
                    "name": "pokemonShopId",
                    "required": true,
                    "description": "id of the pokemon to buy",
                    "type": "integer"
                }
            ],
            "post": {
                "tags": [
                    "Pokemons"
                ],
                "parameters":[
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "description": "token of the user",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pokemonShopId",
                        "required": true,
                        "description": "id of the pokemon",
                        "schema": {
                            "$ref": "#/definitions/PokemonId"
                        }
                    }
                ],
                "summary": "Register a User in the system",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/myteam/{token}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "path",
                    "required": true,
                    "description": "token of the user",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Team"
                ],
                "summary": "Get user's team with given token",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "description": "Team with token",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Team"
                        }
                    },
                    "404": {
                        "description": "Failed. Team not found."
                    }
                }
            },
            "post": {
                "tags": [
                    "Team"
                ],
                "summary": "Add a pokemon in user's team at a specific slot",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "description": "Team with token",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pokemonId",
                        "required": true,
                        "description": "Id of the pokemon",
                        "schema": {
                            "$ref": "#/definitions/PokemonId"
                        }
                    },
                    {
                        "in": "query",
                        "name": "slot",
                        "required": true,
                        "description": "slot of the pokemon",
                        "schema": {
                            "$ref": "#/definitions/PokemonId"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/login":{
            "parameters": [
                {
                    "name": "myId",
                    "in": "query",
                    "required": true,
                    "description": "id of the user",
                    "type": "number"
                },
                {
                    "name": "myPassword",
                    "in": "query",
                    "required": true,
                    "description": "password of the user",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Login"
                ],
                "parameters":[
                    {
                    "in": "query",
                    "name": "myId",
                    "required": true,
                    "description": "id of the user",
                    "schema": {
                        "$ref": "#/definitions/PokemonId"
                    } 
                },
                {
                    "in": "query",
                    "name": "myPassword",
                    "required": true,
                    "description": "password of the user",
                    "schema": {
                        "$ref": "#/definitions/id"
                    }
                }
                ],
                "summary": "Log a User in the system",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/register":{
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register a User in the system",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/untoken/{token}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "path",
                    "required": true,
                    "description": "token of the user",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Token"
                ],
                "summary": "Untoken the user",
                "parameters": [
                    {
                    "in": "path",
                    "name": "token",
                    "required": true,
                    "description": "token of the user",
                    "schema": {
                        "$ref": "#/definitions/id"
                    }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                }
            }
        }
    },


    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "PokemonId": {
            "properties": {
                "pId": {
                    "type": "number"
                }
            }
        },
        "Team": {
            "type": "object",
            "properties": {
                "pokemon_ids": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PokemonId"
                    }
            }
        }
        },
        "TeamPokemon": {
            "type": "object",
            "properties": {
                "pokemon_id": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                }
            }
        },
        "Logs": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "money": {
                    "type": "integer"
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        }
    }
}
